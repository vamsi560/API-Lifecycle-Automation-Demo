name: CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Cache PowerShell modules
        uses: actions/cache@v2
        with:
          path: |
            $env:ProgramFiles\PackageManagement\NuGet\Packages\*
            $env:LOCALAPPDATA\PackageManagement\NuGet\Packages\*
          key: modules-${{ runner.os }}
        # Only restore the cache on the first job in the workflow
        if: runner.job == steps.build.id

      - name: Installing Dependencies
        run: |
          # Check if the modules are cached and CODESPACES is not set (not in GitHub Codespaces)
          if (-not (Test-Path "$env:ProgramFiles\PackageManagement\NuGet\Packages\*") -and -not $env:CODESPACES) {
            Install-Module -Name Az -Force -AllowClobber -Scope CurrentUser
            Import-Module Az
            Uninstall-AzureRm
            Install-Module -Name powershell-yaml -Force
            Import-Module -Name powershell-yaml
            npm install -g @stoplight/spectral
            npm install -g openapi-to-postmanv2
          }
        env:
          CODESPACES: ${{ runner.os }}

      - name: Generate Postman collection from OpenAPI file
        run: |
          openapi2postmanv2 -s openapi.yaml -o .api/postman_collection.json

      - name: Commit Postman collection to GitHub repository
        run: |
          git config --local user.email "vamsi.sapireddy@outlook.com"
          git config --local user.name "vamsi560"
          git add .api/postman_collection.json
          git commit -m "Add Postman collection"
          git push
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

      - name: API Specification Validation (Spectral)
        run: |
          # Install Spectral
          spectral lint --ruleset .api/spectral.yml openapi.yaml

      - name: Run PowerShell script
        run: |
          Set-Location -Path .api
          # Run your PowerShell script
          .\everesrapidynamic.ps1
